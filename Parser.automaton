State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OPEN shift to state 106
-- On LT shift to state 151
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On DRAW shift to state 126
-- On COORD shift to state 130
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On statement shift to state 192
-- On program shift to state 193
-- On main shift to state 195
## Reductions:
-- On EOF
--   reduce production statement ->

State 1:
## Known stack suffix:
## SET
## LR(1) items:
statement -> SET . L_PAR expression COMMA expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On L_PAR shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## SET L_PAR
## LR(1) items:
statement -> SET L_PAR . expression COMMA expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 92
## Reductions:

State 3:
## Known stack suffix:
## TAIL
## LR(1) items:
expression -> TAIL . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 91
## Reductions:

State 4:
## Known stack suffix:
## SUB
## LR(1) items:
expression -> SUB . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 90
## Reductions:

State 5:
## Known stack suffix:
## SIN
## LR(1) items:
expression -> SIN . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 89
## Reductions:

State 6:
## Known stack suffix:
## REAL_OF_INT
## LR(1) items:
expression -> REAL_OF_INT . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 88
## Reductions:

State 7:
## Known stack suffix:
## REAL
## LR(1) items:
expression -> REAL . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> REAL

State 8:
## Known stack suffix:
## PIXEL
## LR(1) items:
expression -> PIXEL . L_PAR expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On L_PAR shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## PIXEL L_PAR
## LR(1) items:
expression -> PIXEL L_PAR . expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 84
## Reductions:

State 10:
## Known stack suffix:
## PI
## LR(1) items:
expression -> PI . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> PI

State 11:
## Known stack suffix:
## NOT
## LR(1) items:
expression -> NOT . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 83
## Reductions:

State 12:
## Known stack suffix:
## L_SQ_BRK
## LR(1) items:
expression -> L_SQ_BRK . expression_list R_SQ_BRK [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On L_SQ_BRK shift to state 13
-- On expression_list shift to state 81
## Reductions:

State 13:
## Known stack suffix:
## L_SQ_BRK
## LR(1) items:
expression_list -> L_SQ_BRK . expression COMMA expression_list R_SQ_BRK [ R_SQ_BRK ]
expression_list -> L_SQ_BRK . expression R_SQ_BRK [ R_SQ_BRK ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 76
## Reductions:

State 14:
## Known stack suffix:
## L_PAR
## LR(1) items:
expression -> L_PAR . expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 74
## Reductions:

State 15:
## Known stack suffix:
## INT
## LR(1) items:
expression -> INT . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> INT

State 16:
## Known stack suffix:
## ID
## LR(1) items:
expression -> ID . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> ID

State 17:
## Known stack suffix:
## HEAD
## LR(1) items:
expression -> HEAD . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 73
## Reductions:

State 18:
## Known stack suffix:
## FLOOR
## LR(1) items:
expression -> FLOOR . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 72
## Reductions:

State 19:
## Known stack suffix:
## COS
## LR(1) items:
expression -> COS . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 71
## Reductions:

State 20:
## Known stack suffix:
## COORD
## LR(1) items:
expression -> COORD . L_PAR expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On L_PAR shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## COORD L_PAR
## LR(1) items:
expression -> COORD L_PAR . expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 67
## Reductions:

State 22:
## Known stack suffix:
## COLOR
## LR(1) items:
expression -> COLOR . L_PAR expression COMMA expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On L_PAR shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## COLOR L_PAR
## LR(1) items:
expression -> COLOR L_PAR . expression COMMA expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 25
## Reductions:

State 24:
## Known stack suffix:
## BOOL
## LR(1) items:
expression -> BOOL . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> BOOL

State 25:
## Known stack suffix:
## COLOR L_PAR expression
## LR(1) items:
expression -> COLOR L_PAR expression . COMMA expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . ADD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . SUB expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MUL expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DIV expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MOD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . AND expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . OR expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . EQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . NEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COLOR [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COORD [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT X [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT Y [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT BLUE [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT RED [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT GREEN [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . CONS expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On COMMA shift to state 62
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 26:
## Known stack suffix:
## expression SUB
## LR(1) items:
expression -> expression SUB . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## expression SUB expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression SUB expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression SUB expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 28:
## Known stack suffix:
## expression OR
## LR(1) items:
expression -> expression OR . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## expression OR expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression OR expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression OR expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 30:
## Known stack suffix:
## expression NEQ
## LR(1) items:
expression -> expression NEQ . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## expression NEQ expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression NEQ expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression NEQ expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 32:
## Known stack suffix:
## expression MUL
## LR(1) items:
expression -> expression MUL . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## expression MUL expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression MUL expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression MUL expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 34:
## Known stack suffix:
## expression MOD
## LR(1) items:
expression -> expression MOD . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## expression MOD expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression MOD expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression MOD expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 36:
## Known stack suffix:
## expression LT
## LR(1) items:
expression -> expression LT . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## expression LT expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression LT expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression LT expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 38:
## Known stack suffix:
## expression LEQ
## LR(1) items:
expression -> expression LEQ . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## expression LEQ expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression LEQ expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression LEQ expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 40:
## Known stack suffix:
## expression GT
## LR(1) items:
expression -> expression GT . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## expression GT expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression GT expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression GT expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 42:
## Known stack suffix:
## expression GEQ
## LR(1) items:
expression -> expression GEQ . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## expression GEQ expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression GEQ expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression GEQ expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 44:
## Known stack suffix:
## expression EQ
## LR(1) items:
expression -> expression EQ . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## expression EQ expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression EQ expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression EQ expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 46:
## Known stack suffix:
## expression DOT
## LR(1) items:
expression -> expression DOT . COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression DOT . COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression DOT . X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression DOT . Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression DOT . BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression DOT . RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression DOT . GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On Y shift to state 47
-- On X shift to state 48
-- On RED shift to state 49
-- On GREEN shift to state 50
-- On COORD shift to state 51
-- On COLOR shift to state 52
-- On BLUE shift to state 53
## Reductions:

State 47:
## Known stack suffix:
## expression DOT Y
## LR(1) items:
expression -> expression DOT Y . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DOT Y

State 48:
## Known stack suffix:
## expression DOT X
## LR(1) items:
expression -> expression DOT X . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DOT X

State 49:
## Known stack suffix:
## expression DOT RED
## LR(1) items:
expression -> expression DOT RED . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DOT RED

State 50:
## Known stack suffix:
## expression DOT GREEN
## LR(1) items:
expression -> expression DOT GREEN . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DOT GREEN

State 51:
## Known stack suffix:
## expression DOT COORD
## LR(1) items:
expression -> expression DOT COORD . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DOT COORD

State 52:
## Known stack suffix:
## expression DOT COLOR
## LR(1) items:
expression -> expression DOT COLOR . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DOT COLOR

State 53:
## Known stack suffix:
## expression DOT BLUE
## LR(1) items:
expression -> expression DOT BLUE . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DOT BLUE

State 54:
## Known stack suffix:
## expression DIV
## LR(1) items:
expression -> expression DIV . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## expression DIV expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression DIV expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression DIV expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 56:
## Known stack suffix:
## expression CONS
## LR(1) items:
expression -> expression CONS . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## expression CONS expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression CONS expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression CONS expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 58:
## Known stack suffix:
## expression AND
## LR(1) items:
expression -> expression AND . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## expression AND expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression AND expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression AND expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 60:
## Known stack suffix:
## expression ADD
## LR(1) items:
expression -> expression ADD . expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## expression ADD expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression ADD expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> expression ADD expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 62:
## Known stack suffix:
## COLOR L_PAR expression COMMA
## LR(1) items:
expression -> COLOR L_PAR expression COMMA . expression COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## COLOR L_PAR expression COMMA expression
## LR(1) items:
expression -> COLOR L_PAR expression COMMA expression . COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . ADD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . SUB expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MUL expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DIV expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MOD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . AND expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . OR expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . EQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . NEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COLOR [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COORD [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT X [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT Y [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT BLUE [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT RED [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT GREEN [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . CONS expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On COMMA shift to state 64
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 64:
## Known stack suffix:
## COLOR L_PAR expression COMMA expression COMMA
## LR(1) items:
expression -> COLOR L_PAR expression COMMA expression COMMA . expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## COLOR L_PAR expression COMMA expression COMMA expression
## LR(1) items:
expression -> COLOR L_PAR expression COMMA expression COMMA expression . R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 66
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 66:
## Known stack suffix:
## COLOR L_PAR expression COMMA expression COMMA expression R_PAR
## LR(1) items:
expression -> COLOR L_PAR expression COMMA expression COMMA expression R_PAR . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> COLOR L_PAR expression COMMA expression COMMA expression R_PAR

State 67:
## Known stack suffix:
## COORD L_PAR expression
## LR(1) items:
expression -> COORD L_PAR expression . COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . ADD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . SUB expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MUL expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DIV expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MOD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . AND expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . OR expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . EQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . NEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COLOR [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COORD [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT X [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT Y [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT BLUE [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT RED [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT GREEN [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . CONS expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On COMMA shift to state 68
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 68:
## Known stack suffix:
## COORD L_PAR expression COMMA
## LR(1) items:
expression -> COORD L_PAR expression COMMA . expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 69
## Reductions:

State 69:
## Known stack suffix:
## COORD L_PAR expression COMMA expression
## LR(1) items:
expression -> COORD L_PAR expression COMMA expression . R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 70
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 70:
## Known stack suffix:
## COORD L_PAR expression COMMA expression R_PAR
## LR(1) items:
expression -> COORD L_PAR expression COMMA expression R_PAR . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> COORD L_PAR expression COMMA expression R_PAR

State 71:
## Known stack suffix:
## COS expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> COS expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> COS expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 72:
## Known stack suffix:
## FLOOR expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> FLOOR expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> FLOOR expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 73:
## Known stack suffix:
## HEAD expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> HEAD expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> HEAD expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 74:
## Known stack suffix:
## L_PAR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> L_PAR expression . R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 75
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 75:
## Known stack suffix:
## L_PAR expression R_PAR
## LR(1) items:
expression -> L_PAR expression R_PAR . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> L_PAR expression R_PAR

State 76:
## Known stack suffix:
## L_SQ_BRK expression
## LR(1) items:
expression -> expression . ADD expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . SUB expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MUL expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DIV expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MOD expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . AND expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . OR expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . EQ expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . NEQ expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LT expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GT expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LEQ expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GEQ expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COLOR [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COORD [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT X [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT Y [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT BLUE [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT RED [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT GREEN [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . CONS expression [ SUB R_SQ_BRK OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression_list -> L_SQ_BRK expression . COMMA expression_list R_SQ_BRK [ R_SQ_BRK ]
expression_list -> L_SQ_BRK expression . R_SQ_BRK [ R_SQ_BRK ]
## Transitions:
-- On SUB shift to state 26
-- On R_SQ_BRK shift to state 77
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On COMMA shift to state 78
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 77:
## Known stack suffix:
## L_SQ_BRK expression R_SQ_BRK
## LR(1) items:
expression_list -> L_SQ_BRK expression R_SQ_BRK . [ R_SQ_BRK ]
## Transitions:
## Reductions:
-- On R_SQ_BRK
--   reduce production expression_list -> L_SQ_BRK expression R_SQ_BRK

State 78:
## Known stack suffix:
## L_SQ_BRK expression COMMA
## LR(1) items:
expression_list -> L_SQ_BRK expression COMMA . expression_list R_SQ_BRK [ R_SQ_BRK ]
## Transitions:
-- On L_SQ_BRK shift to state 13
-- On expression_list shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## L_SQ_BRK expression COMMA expression_list
## LR(1) items:
expression_list -> L_SQ_BRK expression COMMA expression_list . R_SQ_BRK [ R_SQ_BRK ]
## Transitions:
-- On R_SQ_BRK shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## L_SQ_BRK expression COMMA expression_list R_SQ_BRK
## LR(1) items:
expression_list -> L_SQ_BRK expression COMMA expression_list R_SQ_BRK . [ R_SQ_BRK ]
## Transitions:
## Reductions:
-- On R_SQ_BRK
--   reduce production expression_list -> L_SQ_BRK expression COMMA expression_list R_SQ_BRK

State 81:
## Known stack suffix:
## L_SQ_BRK expression_list
## LR(1) items:
expression -> L_SQ_BRK expression_list . R_SQ_BRK [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On R_SQ_BRK shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## L_SQ_BRK expression_list R_SQ_BRK
## LR(1) items:
expression -> L_SQ_BRK expression_list R_SQ_BRK . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> L_SQ_BRK expression_list R_SQ_BRK

State 83:
## Known stack suffix:
## NOT expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> NOT expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> NOT expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 84:
## Known stack suffix:
## PIXEL L_PAR expression
## LR(1) items:
expression -> PIXEL L_PAR expression . COMMA expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . ADD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . SUB expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MUL expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DIV expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MOD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . AND expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . OR expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . EQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . NEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COLOR [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COORD [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT X [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT Y [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT BLUE [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT RED [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT GREEN [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . CONS expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On COMMA shift to state 85
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 85:
## Known stack suffix:
## PIXEL L_PAR expression COMMA
## LR(1) items:
expression -> PIXEL L_PAR expression COMMA . expression R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## PIXEL L_PAR expression COMMA expression
## LR(1) items:
expression -> PIXEL L_PAR expression COMMA expression . R_PAR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 87
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 87:
## Known stack suffix:
## PIXEL L_PAR expression COMMA expression R_PAR
## LR(1) items:
expression -> PIXEL L_PAR expression COMMA expression R_PAR . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> PIXEL L_PAR expression COMMA expression R_PAR

State 88:
## Known stack suffix:
## REAL_OF_INT expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> REAL_OF_INT expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> REAL_OF_INT expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 89:
## Known stack suffix:
## SIN expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> SIN expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> SIN expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 90:
## Known stack suffix:
## SUB expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> SUB expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> SUB expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 91:
## Known stack suffix:
## TAIL expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> TAIL expression . [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:
-- On TO SUB STEP SET SEMICOLON R_SQ_BRK R_PAR REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COMMA COLOR COLON CLOSE BOOL_TYP AND ADD
--   reduce production expression -> TAIL expression
** Conflict on SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD

State 92:
## Known stack suffix:
## SET L_PAR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . SUB expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MUL expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DIV expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . MOD expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . AND expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . OR expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . EQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . NEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GT expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . LEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . GEQ expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COLOR [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT COORD [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT X [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT Y [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT BLUE [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT RED [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . DOT GREEN [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
expression -> expression . CONS expression [ SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS COMMA AND ADD ]
statement -> SET L_PAR expression . COMMA expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On COMMA shift to state 93
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 93:
## Known stack suffix:
## SET L_PAR expression COMMA
## LR(1) items:
statement -> SET L_PAR expression COMMA . expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## SET L_PAR expression COMMA expression
## LR(1) items:
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
statement -> SET L_PAR expression COMMA expression . R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 95
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 95:
## Known stack suffix:
## SET L_PAR expression COMMA expression R_PAR
## LR(1) items:
statement -> SET L_PAR expression COMMA expression R_PAR . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> SET L_PAR expression COMMA expression R_PAR

State 96:
## Known stack suffix:
## REAL_TYP
## LR(1) items:
statement -> REAL_TYP . COLON ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On COLON shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## REAL_TYP COLON
## LR(1) items:
statement -> REAL_TYP COLON . ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## REAL_TYP COLON ID
## LR(1) items:
statement -> REAL_TYP COLON ID . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> REAL_TYP COLON ID

State 99:
## Known stack suffix:
## PRINT
## LR(1) items:
statement -> PRINT . L_PAR expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On L_PAR shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## PRINT L_PAR
## LR(1) items:
statement -> PRINT L_PAR . expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## PRINT L_PAR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
statement -> PRINT L_PAR expression . R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 102
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 102:
## Known stack suffix:
## PRINT L_PAR expression R_PAR
## LR(1) items:
statement -> PRINT L_PAR expression R_PAR . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> PRINT L_PAR expression R_PAR

State 103:
## Known stack suffix:
## PIXEL
## LR(1) items:
statement -> PIXEL . COLON ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On COLON shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## PIXEL COLON
## LR(1) items:
statement -> PIXEL COLON . ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## PIXEL COLON ID
## LR(1) items:
statement -> PIXEL COLON ID . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> PIXEL COLON ID

State 106:
## Known stack suffix:
## OPEN
## LR(1) items:
statement -> OPEN . statement_list CLOSE [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OPEN shift to state 106
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On DRAW shift to state 126
-- On COORD shift to state 130
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On statement_list shift to state 146
-- On statement shift to state 148
## Reductions:
-- On SEMICOLON CLOSE
--   reduce production statement ->
-- On CLOSE
--   reduce production statement_list ->
** Conflict on CLOSE

State 107:
## Known stack suffix:
## INT_TYP
## LR(1) items:
statement -> INT_TYP . COLON ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On COLON shift to state 108
## Reductions:

State 108:
## Known stack suffix:
## INT_TYP COLON
## LR(1) items:
statement -> INT_TYP COLON . ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## INT_TYP COLON ID
## LR(1) items:
statement -> INT_TYP COLON ID . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> INT_TYP COLON ID

State 110:
## Known stack suffix:
## IF
## LR(1) items:
statement -> IF . L_PAR expression R_PAR statement ELSE statement [ SEMICOLON EOF ELSE CLOSE ]
statement -> IF . L_PAR expression R_PAR statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On L_PAR shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## IF L_PAR
## LR(1) items:
statement -> IF L_PAR . expression R_PAR statement ELSE statement [ SEMICOLON EOF ELSE CLOSE ]
statement -> IF L_PAR . expression R_PAR statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## IF L_PAR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
statement -> IF L_PAR expression . R_PAR statement ELSE statement [ SEMICOLON EOF ELSE CLOSE ]
statement -> IF L_PAR expression . R_PAR statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 113
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 113:
## Known stack suffix:
## IF L_PAR expression R_PAR
## LR(1) items:
statement -> IF L_PAR expression R_PAR . statement ELSE statement [ SEMICOLON EOF ELSE CLOSE ]
statement -> IF L_PAR expression R_PAR . statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OPEN shift to state 106
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On DRAW shift to state 126
-- On COORD shift to state 130
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On statement shift to state 143
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement ->

State 114:
## Known stack suffix:
## FOREACH
## LR(1) items:
statement -> FOREACH . ID IN expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## FOREACH ID
## LR(1) items:
statement -> FOREACH ID . IN expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On IN shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## FOREACH ID IN
## LR(1) items:
statement -> FOREACH ID IN . expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## FOREACH ID IN expression
## LR(1) items:
expression -> expression . ADD expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
statement -> FOREACH ID IN expression . statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OR shift to state 28
-- On OPEN shift to state 106
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On EQ shift to state 44
-- On DRAW shift to state 126
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On COORD shift to state 130
-- On CONS shift to state 56
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On AND shift to state 58
-- On ADD shift to state 60
-- On statement shift to state 142
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement ->

State 118:
## Known stack suffix:
## FOR
## LR(1) items:
statement -> FOR . ID FROM expression TO expression STEP expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## FOR ID
## LR(1) items:
statement -> FOR ID . FROM expression TO expression STEP expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On FROM shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## FOR ID FROM
## LR(1) items:
statement -> FOR ID FROM . expression TO expression STEP expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## FOR ID FROM expression
## LR(1) items:
expression -> expression . ADD expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ TO SUB OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
statement -> FOR ID FROM expression . TO expression STEP expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TO shift to state 122
-- On SUB shift to state 26
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 122:
## Known stack suffix:
## FOR ID FROM expression TO
## LR(1) items:
statement -> FOR ID FROM expression TO . expression STEP expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## FOR ID FROM expression TO expression
## LR(1) items:
expression -> expression . ADD expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB STEP OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
statement -> FOR ID FROM expression TO expression . STEP expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On STEP shift to state 124
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 124:
## Known stack suffix:
## FOR ID FROM expression TO expression STEP
## LR(1) items:
statement -> FOR ID FROM expression TO expression STEP . expression statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## FOR ID FROM expression TO expression STEP expression
## LR(1) items:
expression -> expression . ADD expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . SUB expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MUL expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DIV expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . MOD expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . AND expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . OR expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . EQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . NEQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LT expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GT expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . LEQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . GEQ expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COLOR [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT COORD [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT X [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT Y [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT BLUE [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT RED [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . DOT GREEN [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
expression -> expression . CONS expression [ SUB SET SEMICOLON REAL_TYP PRINT PIXEL OR OPEN NEQ MUL MOD LT LEQ INT_TYP IF GT GEQ FOREACH FOR EQ EOF ELSE DRAW DOT DIV COORD CONS COLOR COLON CLOSE BOOL_TYP AND ADD ]
statement -> FOR ID FROM expression TO expression STEP expression . statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OR shift to state 28
-- On OPEN shift to state 106
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On EQ shift to state 44
-- On DRAW shift to state 126
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On COORD shift to state 130
-- On CONS shift to state 56
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On AND shift to state 58
-- On ADD shift to state 60
-- On statement shift to state 141
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement ->

State 126:
## Known stack suffix:
## DRAW
## LR(1) items:
statement -> DRAW . L_PAR expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On L_PAR shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## DRAW L_PAR
## LR(1) items:
statement -> DRAW L_PAR . expression R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On TAIL shift to state 3
-- On SUB shift to state 4
-- On SIN shift to state 5
-- On REAL_OF_INT shift to state 6
-- On REAL shift to state 7
-- On PIXEL shift to state 8
-- On PI shift to state 10
-- On NOT shift to state 11
-- On L_SQ_BRK shift to state 12
-- On L_PAR shift to state 14
-- On INT shift to state 15
-- On ID shift to state 16
-- On HEAD shift to state 17
-- On FLOOR shift to state 18
-- On COS shift to state 19
-- On COORD shift to state 20
-- On COLOR shift to state 22
-- On BOOL shift to state 24
-- On expression shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## DRAW L_PAR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . SUB expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MUL expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DIV expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . MOD expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . AND expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . OR expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . EQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . NEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GT expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . LEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . GEQ expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COLOR [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT COORD [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT X [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT Y [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT BLUE [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT RED [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . DOT GREEN [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
expression -> expression . CONS expression [ SUB R_PAR OR NEQ MUL MOD LT LEQ GT GEQ EQ DOT DIV CONS AND ADD ]
statement -> DRAW L_PAR expression . R_PAR [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SUB shift to state 26
-- On R_PAR shift to state 129
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MUL shift to state 32
-- On MOD shift to state 34
-- On LT shift to state 36
-- On LEQ shift to state 38
-- On GT shift to state 40
-- On GEQ shift to state 42
-- On EQ shift to state 44
-- On DOT shift to state 46
-- On DIV shift to state 54
-- On CONS shift to state 56
-- On AND shift to state 58
-- On ADD shift to state 60
## Reductions:

State 129:
## Known stack suffix:
## DRAW L_PAR expression R_PAR
## LR(1) items:
statement -> DRAW L_PAR expression R_PAR . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> DRAW L_PAR expression R_PAR

State 130:
## Known stack suffix:
## COORD
## LR(1) items:
statement -> COORD . COLON ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On COLON shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## COORD COLON
## LR(1) items:
statement -> COORD COLON . ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## COORD COLON ID
## LR(1) items:
statement -> COORD COLON ID . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> COORD COLON ID

State 133:
## Known stack suffix:
## COLOR
## LR(1) items:
statement -> COLOR . COLON ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On COLON shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## COLOR COLON
## LR(1) items:
statement -> COLOR COLON . ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## COLOR COLON ID
## LR(1) items:
statement -> COLOR COLON ID . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> COLOR COLON ID

State 136:
## Known stack suffix:
## COLON
## LR(1) items:
statement -> COLON . ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## COLON ID
## LR(1) items:
statement -> COLON ID . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> COLON ID

State 138:
## Known stack suffix:
## BOOL_TYP
## LR(1) items:
statement -> BOOL_TYP . COLON ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On COLON shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## BOOL_TYP COLON
## LR(1) items:
statement -> BOOL_TYP COLON . ID [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ID shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## BOOL_TYP COLON ID
## LR(1) items:
statement -> BOOL_TYP COLON ID . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> BOOL_TYP COLON ID

State 141:
## Known stack suffix:
## FOR ID FROM expression TO expression STEP expression statement
## LR(1) items:
statement -> FOR ID FROM expression TO expression STEP expression statement . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> FOR ID FROM expression TO expression STEP expression statement

State 142:
## Known stack suffix:
## FOREACH ID IN expression statement
## LR(1) items:
statement -> FOREACH ID IN expression statement . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> FOREACH ID IN expression statement

State 143:
## Known stack suffix:
## IF L_PAR expression R_PAR statement
## LR(1) items:
statement -> IF L_PAR expression R_PAR statement . ELSE statement [ SEMICOLON EOF ELSE CLOSE ]
statement -> IF L_PAR expression R_PAR statement . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On ELSE shift to state 144
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> IF L_PAR expression R_PAR statement
** Conflict on ELSE

State 144:
## Known stack suffix:
## IF L_PAR expression R_PAR statement ELSE
## LR(1) items:
statement -> IF L_PAR expression R_PAR statement ELSE . statement [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OPEN shift to state 106
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On DRAW shift to state 126
-- On COORD shift to state 130
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On statement shift to state 145
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement ->

State 145:
## Known stack suffix:
## IF L_PAR expression R_PAR statement ELSE statement
## LR(1) items:
statement -> IF L_PAR expression R_PAR statement ELSE statement . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> IF L_PAR expression R_PAR statement ELSE statement

State 146:
## Known stack suffix:
## OPEN statement_list
## LR(1) items:
statement -> OPEN statement_list . CLOSE [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
-- On CLOSE shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## OPEN statement_list CLOSE
## LR(1) items:
statement -> OPEN statement_list CLOSE . [ SEMICOLON EOF ELSE CLOSE ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF ELSE CLOSE
--   reduce production statement -> OPEN statement_list CLOSE

State 148:
## Known stack suffix:
## statement
## LR(1) items:
statement_list -> statement . SEMICOLON statement_list [ CLOSE ]
statement_list -> statement . [ CLOSE ]
## Transitions:
-- On SEMICOLON shift to state 149
## Reductions:
-- On CLOSE
--   reduce production statement_list -> statement

State 149:
## Known stack suffix:
## statement SEMICOLON
## LR(1) items:
statement_list -> statement SEMICOLON . statement_list [ CLOSE ]
## Transitions:
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OPEN shift to state 106
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On DRAW shift to state 126
-- On COORD shift to state 130
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On statement_list shift to state 150
-- On statement shift to state 148
## Reductions:
-- On SEMICOLON CLOSE
--   reduce production statement ->
-- On CLOSE
--   reduce production statement_list ->
** Conflict on CLOSE

State 150:
## Known stack suffix:
## statement SEMICOLON statement_list
## LR(1) items:
statement_list -> statement SEMICOLON statement_list . [ CLOSE ]
## Transitions:
## Reductions:
-- On CLOSE
--   reduce production statement_list -> statement SEMICOLON statement_list

State 151:
## Known stack suffix:
## LT
## LR(1) items:
program -> LT . argument_list GT statement [ EOF ]
## Transitions:
-- On REAL_TYP shift to state 152
-- On PIXEL shift to state 157
-- On INT_TYP shift to state 162
-- On COORD shift to state 167
-- On COLOR shift to state 172
-- On COLON shift to state 177
-- On BOOL_TYP shift to state 181
-- On argument_list shift to state 186
-- On argument shift to state 189
## Reductions:
-- On GT
--   reduce production argument_list ->

State 152:
## Known stack suffix:
## REAL_TYP
## LR(1) items:
argument -> REAL_TYP . COLON L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On COLON shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## REAL_TYP COLON
## LR(1) items:
argument -> REAL_TYP COLON . L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On L_CUR_BRK shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## REAL_TYP COLON L_CUR_BRK
## LR(1) items:
argument -> REAL_TYP COLON L_CUR_BRK . ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On ID shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## REAL_TYP COLON L_CUR_BRK ID
## LR(1) items:
argument -> REAL_TYP COLON L_CUR_BRK ID . R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On R_CUR_BRK shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## REAL_TYP COLON L_CUR_BRK ID R_CUR_BRK
## LR(1) items:
argument -> REAL_TYP COLON L_CUR_BRK ID R_CUR_BRK . [ SEMICOLON GT ]
## Transitions:
## Reductions:
-- On SEMICOLON GT
--   reduce production argument -> REAL_TYP COLON L_CUR_BRK ID R_CUR_BRK

State 157:
## Known stack suffix:
## PIXEL
## LR(1) items:
argument -> PIXEL . COLON L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On COLON shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## PIXEL COLON
## LR(1) items:
argument -> PIXEL COLON . L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On L_CUR_BRK shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## PIXEL COLON L_CUR_BRK
## LR(1) items:
argument -> PIXEL COLON L_CUR_BRK . ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On ID shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## PIXEL COLON L_CUR_BRK ID
## LR(1) items:
argument -> PIXEL COLON L_CUR_BRK ID . R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On R_CUR_BRK shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## PIXEL COLON L_CUR_BRK ID R_CUR_BRK
## LR(1) items:
argument -> PIXEL COLON L_CUR_BRK ID R_CUR_BRK . [ SEMICOLON GT ]
## Transitions:
## Reductions:
-- On SEMICOLON GT
--   reduce production argument -> PIXEL COLON L_CUR_BRK ID R_CUR_BRK

State 162:
## Known stack suffix:
## INT_TYP
## LR(1) items:
argument -> INT_TYP . COLON L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On COLON shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## INT_TYP COLON
## LR(1) items:
argument -> INT_TYP COLON . L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On L_CUR_BRK shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## INT_TYP COLON L_CUR_BRK
## LR(1) items:
argument -> INT_TYP COLON L_CUR_BRK . ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On ID shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## INT_TYP COLON L_CUR_BRK ID
## LR(1) items:
argument -> INT_TYP COLON L_CUR_BRK ID . R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On R_CUR_BRK shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## INT_TYP COLON L_CUR_BRK ID R_CUR_BRK
## LR(1) items:
argument -> INT_TYP COLON L_CUR_BRK ID R_CUR_BRK . [ SEMICOLON GT ]
## Transitions:
## Reductions:
-- On SEMICOLON GT
--   reduce production argument -> INT_TYP COLON L_CUR_BRK ID R_CUR_BRK

State 167:
## Known stack suffix:
## COORD
## LR(1) items:
argument -> COORD . COLON L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On COLON shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## COORD COLON
## LR(1) items:
argument -> COORD COLON . L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On L_CUR_BRK shift to state 169
## Reductions:

State 169:
## Known stack suffix:
## COORD COLON L_CUR_BRK
## LR(1) items:
argument -> COORD COLON L_CUR_BRK . ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On ID shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## COORD COLON L_CUR_BRK ID
## LR(1) items:
argument -> COORD COLON L_CUR_BRK ID . R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On R_CUR_BRK shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## COORD COLON L_CUR_BRK ID R_CUR_BRK
## LR(1) items:
argument -> COORD COLON L_CUR_BRK ID R_CUR_BRK . [ SEMICOLON GT ]
## Transitions:
## Reductions:
-- On SEMICOLON GT
--   reduce production argument -> COORD COLON L_CUR_BRK ID R_CUR_BRK

State 172:
## Known stack suffix:
## COLOR
## LR(1) items:
argument -> COLOR . COLON L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On COLON shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## COLOR COLON
## LR(1) items:
argument -> COLOR COLON . L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On L_CUR_BRK shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## COLOR COLON L_CUR_BRK
## LR(1) items:
argument -> COLOR COLON L_CUR_BRK . ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On ID shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## COLOR COLON L_CUR_BRK ID
## LR(1) items:
argument -> COLOR COLON L_CUR_BRK ID . R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On R_CUR_BRK shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## COLOR COLON L_CUR_BRK ID R_CUR_BRK
## LR(1) items:
argument -> COLOR COLON L_CUR_BRK ID R_CUR_BRK . [ SEMICOLON GT ]
## Transitions:
## Reductions:
-- On SEMICOLON GT
--   reduce production argument -> COLOR COLON L_CUR_BRK ID R_CUR_BRK

State 177:
## Known stack suffix:
## COLON
## LR(1) items:
argument -> COLON . L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On L_CUR_BRK shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## COLON L_CUR_BRK
## LR(1) items:
argument -> COLON L_CUR_BRK . ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On ID shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## COLON L_CUR_BRK ID
## LR(1) items:
argument -> COLON L_CUR_BRK ID . R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On R_CUR_BRK shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## COLON L_CUR_BRK ID R_CUR_BRK
## LR(1) items:
argument -> COLON L_CUR_BRK ID R_CUR_BRK . [ SEMICOLON GT ]
## Transitions:
## Reductions:
-- On SEMICOLON GT
--   reduce production argument -> COLON L_CUR_BRK ID R_CUR_BRK

State 181:
## Known stack suffix:
## BOOL_TYP
## LR(1) items:
argument -> BOOL_TYP . COLON L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On COLON shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## BOOL_TYP COLON
## LR(1) items:
argument -> BOOL_TYP COLON . L_CUR_BRK ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On L_CUR_BRK shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## BOOL_TYP COLON L_CUR_BRK
## LR(1) items:
argument -> BOOL_TYP COLON L_CUR_BRK . ID R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On ID shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## BOOL_TYP COLON L_CUR_BRK ID
## LR(1) items:
argument -> BOOL_TYP COLON L_CUR_BRK ID . R_CUR_BRK [ SEMICOLON GT ]
## Transitions:
-- On R_CUR_BRK shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## BOOL_TYP COLON L_CUR_BRK ID R_CUR_BRK
## LR(1) items:
argument -> BOOL_TYP COLON L_CUR_BRK ID R_CUR_BRK . [ SEMICOLON GT ]
## Transitions:
## Reductions:
-- On SEMICOLON GT
--   reduce production argument -> BOOL_TYP COLON L_CUR_BRK ID R_CUR_BRK

State 186:
## Known stack suffix:
## LT argument_list
## LR(1) items:
program -> LT argument_list . GT statement [ EOF ]
## Transitions:
-- On GT shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## LT argument_list GT
## LR(1) items:
program -> LT argument_list GT . statement [ EOF ]
## Transitions:
-- On SET shift to state 1
-- On REAL_TYP shift to state 96
-- On PRINT shift to state 99
-- On PIXEL shift to state 103
-- On OPEN shift to state 106
-- On INT_TYP shift to state 107
-- On IF shift to state 110
-- On FOREACH shift to state 114
-- On FOR shift to state 118
-- On DRAW shift to state 126
-- On COORD shift to state 130
-- On COLOR shift to state 133
-- On COLON shift to state 136
-- On BOOL_TYP shift to state 138
-- On statement shift to state 188
## Reductions:
-- On EOF
--   reduce production statement ->

State 188:
## Known stack suffix:
## LT argument_list GT statement
## LR(1) items:
program -> LT argument_list GT statement . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production program -> LT argument_list GT statement

State 189:
## Known stack suffix:
## argument
## LR(1) items:
argument_list -> argument . SEMICOLON argument_list [ GT ]
argument_list -> argument . [ GT ]
## Transitions:
-- On SEMICOLON shift to state 190
## Reductions:
-- On GT
--   reduce production argument_list -> argument

State 190:
## Known stack suffix:
## argument SEMICOLON
## LR(1) items:
argument_list -> argument SEMICOLON . argument_list [ GT ]
## Transitions:
-- On REAL_TYP shift to state 152
-- On PIXEL shift to state 157
-- On INT_TYP shift to state 162
-- On COORD shift to state 167
-- On COLOR shift to state 172
-- On COLON shift to state 177
-- On BOOL_TYP shift to state 181
-- On argument_list shift to state 191
-- On argument shift to state 189
## Reductions:
-- On GT
--   reduce production argument_list ->

State 191:
## Known stack suffix:
## argument SEMICOLON argument_list
## LR(1) items:
argument_list -> argument SEMICOLON argument_list . [ GT ]
## Transitions:
## Reductions:
-- On GT
--   reduce production argument_list -> argument SEMICOLON argument_list

State 192:
## Known stack suffix:
## statement
## LR(1) items:
program -> statement . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production program -> statement

State 193:
## Known stack suffix:
## program
## LR(1) items:
main -> program . EOF [ # ]
## Transitions:
-- On EOF shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## program EOF
## LR(1) items:
main -> program EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> program EOF

State 195:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

